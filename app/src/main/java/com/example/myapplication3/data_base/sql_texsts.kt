package com.example.myapplication3

const val CREATE_TABLE_QUESTION = "" +
    "CREATE TABLE question (\n" +
    "    id int PRIMARY KEY,\n" +
    "    question text NOT NULL,\n" +
    "    answer int\n" +
    ");"

const val CREATE_TABLE_NODE = "" +
    "CREATE TABLE IF NOT EXISTS node (\n" +
    "    question_id int NOT NULL REFERENCES question (id),\n" +
    "    sub_question_id int NOT NULL REFERENCES question (id),\n" +
    "    PRIMARY KEY (question_id, sub_question_id)\n" +
    ");"

const val FILL_QUESTION = "" +
    "INSERT INTO question\n" +
    "VALUES (1, 'Личный транспорт', NULL),\n" +
    "       (2, 'Кикшеринг', NULL),\n" +
    "       (3, 'Срочные вопросы', NULL),\n" +
    "       (1100, 'Где можно парковаться?', NULL),\n" +
    "       (1200, 'Вопрос 2', NULL),\n" +
    "       (1300, 'Вопрос 3', NULL),\n" +
    "       (2400, 'Вопрос 4', NULL),\n" +
    "       (2500, 'Вопрос 5', NULL),\n" +
    "       (2600, 'Вопрос 6', NULL),\n" +
    "       (10700, 'Вопрос 7', NULL),\n" +
    "       (10800, 'Вопрос 8', NULL),\n" +
    "       (10900, 'Вопрос 9', NULL),\n" +
    "       (11000, 'Вопрос 10', NULL),\n" +
    "       (11100, 'Вопрос 11', NULL),\n" +
    "       (11200, 'Вопрос 12', NULL),\n" +
    "       (11300, 'Вопрос 13', NULL),\n" +
    "       (11400, 'Вопрос 14', NULL),\n" +
    "       (11500, 'Вопрос 15', NULL),\n" +
    "       (11600, 'Вопрос 16', NULL),\n" +
    "       (11700, 'Вопрос 17', NULL),\n" +
    "       (11800, 'Вопрос 18', NULL),\n" +
    "       (11900, 'Вопрос 19', NULL),\n" +
    "       (12000, 'Вопрос 20', NULL),\n" +
    "       (1110, 'Можно ли паковаться на левой стороне дороги?', 3652),\n" +
    "       (1120, 'Вопрос 1.2', 2101),\n" +
    "       (1130, 'Вопрос 1.3', NULL),\n" +
    "       (1140, 'Вопрос 1.4', NULL),\n" +
    "       (1210, 'Вопрос 2.1', NULL),\n" +
    "       (1220, 'Вопрос 2.2', NULL),\n" +
    "       (1230, 'Вопрос 2.3', NULL),\n" +
    "       (1240, 'Вопрос 2.4', 2102),\n" +
    "       (1250, 'Вопрос 2.5', NULL),\n" +
    "       (1310, 'Вопрос 3.1', NULL),\n" +
    "       (1320, 'Вопрос 3.2', 2103),\n" +
    "       (1330, 'Вопрос 3.3', NULL),\n" +
    "       (2410, 'Вопрос 4.1', 2104),\n" +
    "       (2420, 'Вопрос 4.2', NULL),\n" +
    "       (2430, 'Вопрос 4.3', NULL),\n" +
    "       (2440, 'Вопрос 4.4', NULL),\n" +
    "       (2510, 'Вопрос 5.1', NULL),\n" +
    "       (2520, 'Вопрос 5.2', NULL),\n" +
    "       (2530, 'Вопрос 5.3', NULL),\n" +
    "       (2610, 'Вопрос 6.1', NULL),\n" +
    "       (2620, 'Вопрос 6.2', NULL),\n" +
    "       (2630, 'Вопрос 6.3', 2105),\n" +
    "       (2640, 'Вопрос 6.4', 2106),\n" +
    "       (2650, 'Вопрос 6.5', NULL),\n" +
    "       (1111, 'Вопрос 1.1.1', 3001),\n" +
    "       (1131, 'Вопрос 1.3.1', 3002),\n" +
    "       (1141, 'Вопрос 1.4.1', 3003),\n" +
    "       (1112, 'Вопрос 1.1.2', 3004),\n" +
    "       (1132, 'Вопрос 1.3.2', 3005),\n" +
    "       (1142, 'Вопрос 1.4.2', 3006),\n" +
    "       (1113, 'Вопрос 1.1.3', 3007),\n" +
    "       (1133, 'Вопрос 1.3.3', 3008),\n" +
    "       (1143, 'Вопрос 1.4.3', 3009),\n" +
    "       (1114, 'Вопрос 1.1.4', 3010),\n" +
    "       (1134, 'Вопрос 1.3.4', 3011),\n" +
    "       (1144, 'Вопрос 1.4.4', 3012),\n" +
    "       (1211, 'Вопрос 2.1.1', 3013),\n" +
    "       (1221, 'Вопрос 2.2.1', 3014),\n" +
    "       (1231, 'Вопрос 2.3.1', 3015),\n" +
    "       (1251, 'Вопрос 2.5.1', 3016),\n" +
    "       (1212, 'Вопрос 2.1.2', 3017),\n" +
    "       (1222, 'Вопрос 2.2.2', 3018),\n" +
    "       (1232, 'Вопрос 2.3.2', 3019),\n" +
    "       (1252, 'Вопрос 2.5.2', 3020),\n" +
    "       (1213, 'Вопрос 2.1.3', 3021),\n" +
    "       (1223, 'Вопрос 2.2.3', 3022),\n" +
    "       (1233, 'Вопрос 2.3.3', 3023),\n" +
    "       (1253, 'Вопрос 2.5.3', 3024),\n" +
    "       (1214, 'Вопрос 2.1.4', 3025),\n" +
    "       (1224, 'Вопрос 2.2.4', 3026),\n" +
    "       (1234, 'Вопрос 2.3.4', 3027),\n" +
    "       (1254, 'Вопрос 2.5.4', 3028),\n" +
    "       (1311, 'Вопрос 3.1.1', 3029),\n" +
    "       (1331, 'Вопрос 3.3.1', 3030),\n" +
    "       (1312, 'Вопрос 3.1.2', 3031),\n" +
    "       (1332, 'Вопрос 3.3.2', 3032),\n" +
    "       (1313, 'Вопрос 3.1.3', 3033),\n" +
    "       (1333, 'Вопрос 3.3.3', 3034),\n" +
    "       (1314, 'Вопрос 3.1.4', 3035),\n" +
    "       (1334, 'Вопрос 3.3.4', 3036),\n" +
    "       (2421, 'Вопрос 4.2.1', 3037),\n" +
    "       (2431, 'Вопрос 4.3.1', 3038),\n" +
    "       (2441, 'Вопрос 4.4.1', 3039),\n" +
    "       (2422, 'Вопрос 4.2.2', 3040),\n" +
    "       (2432, 'Вопрос 4.3.2', 3041),\n" +
    "       (2442, 'Вопрос 4.4.2', 3042),\n" +
    "       (2423, 'Вопрос 4.2.3', 3043),\n" +
    "       (2433, 'Вопрос 4.3.3', 3044),\n" +
    "       (2443, 'Вопрос 4.4.3', 3045),\n" +
    "       (2511, 'Вопрос 5.1.1', 3046),\n" +
    "       (2521, 'Вопрос 5.2.1', 3047),\n" +
    "       (2531, 'Вопрос 5.3.1', 3048),\n" +
    "       (2512, 'Вопрос 5.1.2', 3049),\n" +
    "       (2522, 'Вопрос 5.2.2', 3050),\n" +
    "       (2532, 'Вопрос 5.3.2', 3051),\n" +
    "       (2611, 'Вопрос 6.1.1', 3052),\n" +
    "       (2621, 'Вопрос 6.2.1', 3053),\n" +
    "       (2651, 'Вопрос 6.5.1', 3054),\n" +
    "       (2612, 'Вопрос 6.1.2', 3055),\n" +
    "       (2622, 'Вопрос 6.2.2', 3056),\n" +
    "       (2652, 'Вопрос 6.5.2', 3057),\n" +
    "       (2613, 'Вопрос 6.1.3', 3058),\n" +
    "       (2623, 'Вопрос 6.2.3', 3059),\n" +
    "       (2653, 'Вопрос 6.5.3', 3060),\n" +
    "       (2614, 'Вопрос 6.1.4', 3061),\n" +
    "       (2624, 'Вопрос 6.2.4', 3062),\n" +
    "       (2654, 'Вопрос 6.5.4', 3063);"

const val FILL_NODE = "" +
    "INSERT INTO node\n" +
    "VALUES (1, 1100),\n" +
    "       (1, 1200),\n" +
    "       (1, 1300),\n" +
    "       (1, 10700),\n" +
    "       (1, 10800),\n" +
    "       (1, 10900),\n" +
    "       (1, 11000),\n" +
    "       (1, 11100),\n" +
    "       (1, 11200),\n" +
    "       (1, 11300),\n" +
    "       (1, 11400),\n" +
    "       (1, 11500),\n" +
    "       (1, 11600),\n" +
    "       (1, 11700),\n" +
    "       (1, 11800),\n" +
    "       (1, 11900),\n" +
    "       (1, 12000),\n" +
    "       (2, 2400),\n" +
    "       (2, 2500),\n" +
    "       (2, 2600),\n" +
    "       (1100, 1110),\n" +
    "       (1100, 1120),\n" +
    "       (1100, 1130),\n" +
    "       (1100, 1140),\n" +
    "       (1200, 1210),\n" +
    "       (1200, 1220),\n" +
    "       (1200, 1230),\n" +
    "       (1200, 1240),\n" +
    "       (1200, 1250),\n" +
    "       (1300, 1310),\n" +
    "       (1300, 1320),\n" +
    "       (1300, 1330),\n" +
    "       (2400, 2410),\n" +
    "       (2400, 2420),\n" +
    "       (2400, 2430),\n" +
    "       (2400, 2440),\n" +
    "       (2500, 2510),\n" +
    "       (2500, 2520),\n" +
    "       (2500, 2530),\n" +
    "       (2600, 2610),\n" +
    "       (2500, 2620),\n" +
    "       (2600, 2630),\n" +
    "       (2600, 2640),\n" +
    "       (2600, 2650),\n" +
    "       (1110, 1111),\n" +
    "       (1130, 1131),\n" +
    "       (1140, 1141),\n" +
    "       (1110, 1112),\n" +
    "       (1130, 1132),\n" +
    "       (1140, 1142),\n" +
    "       (1110, 1113),\n" +
    "       (1130, 1133),\n" +
    "       (1140, 1143),\n" +
    "       (1110, 1114),\n" +
    "       (1130, 1134),\n" +
    "       (1140, 1144),\n" +
    "       (1210, 1211),\n" +
    "       (1220, 1221),\n" +
    "       (1230, 1231),\n" +
    "       (1250, 1251),\n" +
    "       (1210, 1212),\n" +
    "       (1220, 1222),\n" +
    "       (1230, 1232),\n" +
    "       (1250, 1252),\n" +
    "       (1210, 1213),\n" +
    "       (1220, 1223),\n" +
    "       (1230, 1233),\n" +
    "       (1250, 1253),\n" +
    "       (1210, 1214),\n" +
    "       (1220, 1224),\n" +
    "       (1230, 1234),\n" +
    "       (1250, 1254),\n" +
    "       (1310, 1311),\n" +
    "       (1330, 1331),\n" +
    "       (1310, 1312),\n" +
    "       (1330, 1332),\n" +
    "       (1310, 1313),\n" +
    "       (1330, 1333),\n" +
    "       (1310, 1314),\n" +
    "       (1330, 1334),\n" +
    "       (2420, 2421),\n" +
    "       (2430, 2431),\n" +
    "       (2440, 2441),\n" +
    "       (2420, 2422),\n" +
    "       (2430, 2432),\n" +
    "       (2440, 2442),\n" +
    "       (2420, 2423),\n" +
    "       (2430, 2433),\n" +
    "       (2440, 2443),\n" +
    "       (2510, 2511),\n" +
    "       (2520, 2521),\n" +
    "       (2530, 2531),\n" +
    "       (2510, 2512),\n" +
    "       (2520, 2522),\n" +
    "       (2530, 2532),\n" +
    "       (2610, 2611),\n" +
    "       (2620, 2621),\n" +
    "       (2650, 2651),\n" +
    "       (2610, 2612),\n" +
    "       (2620, 2622),\n" +
    "       (2650, 2652),\n" +
    "       (2610, 2613),\n" +
    "       (2620, 2623),\n" +
    "       (2650, 2653),\n" +
    "       (2610, 2614),\n" +
    "       (2620, 2624),\n" +
    "       (2650, 2654),\n" +
    "       (3, 1331),\n" +
    "       (3, 1120),\n" +
    "       (3, 1210),\n" +
    "       (3, 2614);"

const val DROP_TABLE_NODE = "DROP TABLE IF EXISTS node;"
const val DROP_TABLE_QUESTION = "DROP TABLE IF EXISTS question;"
